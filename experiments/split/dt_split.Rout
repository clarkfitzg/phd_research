
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(data.table)
> 
> # Only one thread
> setDTthreads(1L)
> 
> 
> # Return a vector of types with column names
> pems_columns = function(nlanes = 8)
+ {
+     lane_number = rep(seq.int(nlanes), each = 3)
+     nm = rep(c("flow", "occupancy", "speed"), nlanes)
+     nm = paste0(nm, lane_number)
+     nm = c("timestamp", "station", nm)
+     out = rep(c("integer", "numeric", "integer"), nlanes)
+     out = c("POSIXct", "integer", out)
+     names(out) = nm
+     out
+ }
> 
> 
> read_file = function(fname, keepers = c("station", "flow2", "occupancy2"))
+ {
+     select = match(keepers, names(pems_columns()))
+ 
+     #con = gzfile(fname, open = "rb")
+     cmd = paste0("zcat ", fname)
+     out = data.table::fread(cmd, sep = ",", select = select)
+     colnames(out) = keepers
+     list(fname = fname, data = out)
+ }
> 
> 
> split_and_write = function(input, split_column_name = "station")
+ {
+     topdir = dirname(input$fname)
+     file_no_extension = gsub("\\..*", "", basename(input$fname))
+ 
+     # If we put the splitting column column name earlier in the directory
+     # structure then it shows more quickly what we're splitting by.
+     newdir = paste0(topdir, "/", split_column_name, "/", file_no_extension)
+     dir.create(newdir, recursive = TRUE)
+ 
+     input$data[, fwrite(.SD, paste0(newdir, "/", station), col.names = FALSE), by=station]
+ }
> 
> 
> if(TRUE)
+ {
+ 
+     files = c(list.files(path = "/scratch/clarkf/pems/district3"),
+               list.files(path = "/scratch/clarkf/pems/district4"))
+ 
+     lapply(files, function(fname){
+         tmp = read_file(fname) 
+         split_and_write(tmp)
+     })
+ 
+ }
Taking input= as a system command ('zcat d03_text_station_raw_2016_01_01.txt.gz') and a variable has been used in the expression passed to `input=`. Please use fread(cmd=...). There is a security concern if you are creating an app, and the app could have a malicious user, and the app is not running in a secure envionment; e.g. the app is running as root. Please read item 5 in the NEWS file for v1.11.6 for more information and for the option to suppress this message.
gzip: d03_text_station_raw_2016_01_01.txt.gz: No such file or directory
Error in setnames(x, value) : 
  Can't assign 3 names to a 0 column data.table
Calls: lapply ... colnames<- -> names<- -> names<-.data.table -> setnames
In addition: Warning message:
In data.table::fread(cmd, sep = ",", select = select) :
  File '/tmp/RtmpZK1Znl/file975e22d1d8ea' has size 0. Returning a NULL data.table.
recover called non-interactively; frames dumped, use debugger() to view
> 
> 
> if(FALSE)
+ {
+     # On my local machine
+ 
+     testfile = "~/data/pems/d04_text_station_raw_2016_04_13.txt.gz"
+ 
+ system.time(
+     t2 <- read_file(testfile)
+ )
+ # About the same as iotools
+ #   user  system elapsed
+ #  5.924   0.284   6.212
+ 
+ system.time(
+     split_and_write(t2)
+ )
+ #   user  system elapsed
+ #  2.532   0.104   2.634
+ #    user  system elapsed
+ #   1.356   0.188   1.552
+ 
+ # Takes under 10 seconds.
+ # So we should be able to process 300 files like this in less than 
+ # 3000 / 60 = 50 minutes
+ # I can try different levels of parallelism to see when we hit the
+ # bottleneck with disk IO.
+ }
> 
> proc.time()
   user  system elapsed 
  0.374   0.049   0.415 
